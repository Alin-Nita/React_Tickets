{"version":3,"sources":["data/data.js","components/Counter/Counter.jsx","components/Employee-Card/Employee-Card.jsx","components/Header/Header.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["team","id","name","role","Counter","useState","counter","setCounter","class","onClick","EmployeeCard","props","peopleArray","console","log","EmployeesCards","map","employee","className","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAoDeA,G,WApDF,CACX,CACEC,GAAI,EACJC,KAAM,eACNC,KAAM,6BAER,CACEF,GAAI,EACJC,KAAM,iBACNC,KAAM,6BAER,CACEF,GAAI,EACJC,KAAM,eACNC,KAAM,6BAER,CACEF,GAAI,EACJC,KAAM,gBACNC,KAAM,sBAER,CACEF,GAAI,EACJC,KAAM,gBACNC,KAAM,sBAER,CACEF,GAAI,EACJC,KAAM,aACNC,KAAM,6BAER,CACEF,GAAI,EACJC,KAAM,kBACNC,KAAM,mBAER,CACEF,GAAI,EACJC,KAAM,aACNC,KAAM,UAER,CACEF,GAAI,EACJC,KAAM,gBACNC,KAAM,UAER,CACEF,GAAI,GACJC,KAAM,mBACNC,KAAM,c,8BClBKC,EA5BC,WACd,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAYA,OACE,sBAAKC,MAAM,UAAX,UACE,mBAAGA,MAAM,iBAAT,SAA2BF,IAC3B,sBAAKL,GAAG,UAAR,UACE,wBAAQO,MAAM,gBAAgBC,QAVX,WAErBF,EADc,IAAZD,EACS,EACKA,EAAU,IAOxB,eAGA,wBAAQE,MAAM,eAAeC,QAjBV,WACvBF,EAAWD,EAAU,IAgBjB,sBCHOI,EAhBM,SAACC,GACpB,IAAQC,EAAgBD,EAAhBC,YACRC,QAAQC,IAAIF,GAEZ,IAAMG,EAAiBH,EAAYI,KAAI,SAACC,GACtC,OACE,sBAAKC,UAAU,kBAAf,UACE,qBAAIA,UAAU,OAAd,mBAA4BD,EAASf,QACrC,qBAAIgB,UAAU,OAAd,mBAA4BD,EAASd,QACrC,cAAC,EAAD,UAIN,OAAO,mCAAGY,KCVGI,G,MAJA,WACb,OAAO,wDCYMC,EAXH,WACV,OACE,qCACE,cAAC,EAAD,IACA,sBAAKF,UAAU,sBAAf,UACE,cAAC,EAAD,CAAcN,YAAaZ,IAD7B,WCGSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.60ecb1ea.chunk.js","sourcesContent":["const team = [\r\n  {\r\n    id: 1,\r\n    name: \"Alima Miller\",\r\n    role: \"Junior Software Developer\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Evelyn Rodgers\",\r\n    role: \"Junior Software Developer\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Henley Myers\",\r\n    role: \"Junior Software Developer\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Celyn Sanders\",\r\n    role: \"Software Developer\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Effie Mohamed\",\r\n    role: \"Software Developer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Karam Lees\",\r\n    role: \"Senior Software Developer\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Eleanor Dowling\",\r\n    role: \"Project Manager\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Haris Grey\",\r\n    role: \"Tester\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Sohaib Farley\",\r\n    role: \"Tester\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Phillip Mitchell\",\r\n    role: \"Hard Man\",\r\n  },\r\n];\r\nexport default team;\r\n","import React, { useState } from \"react\";\r\nimport \"./Counter.scss\";\r\n\r\nconst Counter = () => {\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const incrementCounter = () => {\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  const decrementCounter = () => {\r\n    if (counter === 0) {\r\n      setCounter(0);\r\n    } else setCounter(counter - 1);\r\n  };\r\n\r\n  return (\r\n    <div class=\"counter\">\r\n      <p class=\"counter__score\">{counter}</p>\r\n      <div id=\"buttons\">\r\n        <button class=\"button__minus\" onClick={decrementCounter}>\r\n          -\r\n        </button>\r\n        <button class=\"button__plus\" onClick={incrementCounter}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport \"./Employee-Card.scss\";\r\nimport Counter from \"../Counter/Counter\";\r\n\r\nconst EmployeeCard = (props) => {\r\n  const { peopleArray } = props;\r\n  console.log(peopleArray);\r\n\r\n  const EmployeesCards = peopleArray.map((employee) => {\r\n    return (\r\n      <div className=\"name__and__role\">\r\n        <h4 className=\"name\">Name: {employee.name}</h4>\r\n        <h5 className=\"role\">Role: {employee.role}</h5>\r\n        <Counter />\r\n      </div>\r\n    );\r\n  });\r\n  return <>{EmployeesCards}</>;\r\n};\r\n\r\nexport default EmployeeCard;\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n  return <h1>Ticket Tracker v 1.0</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import \"./App.scss\";\r\nimport team from \"./data/data\";\r\nimport EmployeeCard from \"./components/Employee-Card/Employee-Card\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"Employees_Container\">\r\n        <EmployeeCard peopleArray={team} />;\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}